void OutputBackHTrans(Tree *Tr)
{
	short i;
	FILE *fp;
	struct Node *P;
	P = (*Tr).PtrHead;
	fp = fopen("E:\\xh\\维余师兄程序\\Data\\outPut\\backh\\333_mxth-change.txt", "w+");
	do
	{
		for (i = 0; i < (*Tr).place_num; i++)
		{
			if (i != 8 && i != 17 && i != 26)
			{
				if (P->PtrNetStateRow[i] != NULL)
				{
					fprintf(fp, "%d\t", P->PtrNetStateRow[i]->TokenNum);
				}
				else
				{
					fprintf(fp, "%d\t", 0);
				}
			}
		}
		for (i = 0; i < (*Tr).place_num; i++)
		{
			if (i == 2 || i == 4 || i == 6 || i == 11 || i == 13 || i == 15 || i == 20 || i == 22 || i == 24)
			{
				if (P->PtrNetStateRow[i] != NULL)
				{
					fprintf(fp, "%.2f\t", P->PtrNetStateRow[i]->residenceTime);
				}
				else
				{
					fprintf(fp, "%.2f\t", 0.00);
				}
			}
		}
		short* temp_firetransitions = new short[P->NumSons];//可激发变迁
		for (int j = 0; j < P->NumSons; j++)
		{
			temp_firetransitions[j] = P->Ptrsons[j]->PtrFiredTransitions[0];//将所有可激发变迁的id存进数组
		}
		short* temp_transitions = new short[Tr->transit_num];//将所有变迁存进数组，对应可激发变迁的位置存收益，其余位置为0；
		
		for (i = 0; i < Tr->transit_num; i++)
		{
			short t = 0;
			temp_transitions[i] = 0;
			while (t < P->NumSons)
			{
				if (i == temp_firetransitions[t])
				{
					temp_transitions[i] = P->Earnings[t];
					break;
				}
				else
					t++;
			}
			fprintf(fp, "%d\t", temp_transitions[i]);
		}

		fprintf(fp, "\n");
		P = P->PtrOpenNext;
		delete[] temp_firetransitions;
		delete[] temp_transitions;
	} while (P != NULL);
	fclose(fp);
}